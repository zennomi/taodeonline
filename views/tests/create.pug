extends ../layouts/common.pug
block stylesheet
    style.
        .sortable {
            display: block;
        }
        .sortable > div {
        margin: 5px 0;
        display: block;
        padding: 10px;
        border-radius: 4px;
        cursor: move;
        background: #fff;
        }
        .sortable > div:hover {
            background: #ffffe0;
        }
        .sortable > div.active {
            background: #ccc;
        }
        .sortable > div.dragging {
            background: #e0ffff;
            box-shadow: 0 4px 20px rgba(0,0,0,0.5);
            opacity: 0.5;
        }
    link(rel="stylesheet", href="/css/do-the-test.css")
block script-header
    style.
        body {
            background: #AAFFA9;  /* fallback for old browsers */
            background: -webkit-linear-gradient(to right, #11FFBD, #AAFFA9);  /* Chrome 10-25, Safari 5.1-6 */
            background: linear-gradient(to right, #11FFBD, #AAFFA9); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */

            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;

        }
        .question-wrap > p {
            margin-bottom: 0;
        }
    include ../layouts/mathjax.pug

block content
    .row
        .col
            input.form-control(name="name" type="text" placeholder="Tên đề")
        .col
            select.form-select(name="grade")
                option(value="" hidden) Khối
                option 10
                option 11
                option 12
                option(value="") Trống
        .col
            input.form-control(name="time" type="number" value=50)

    #main-list.sortable
        each q, i in matchedQuestions
            div(id="item-"+q._id)
                b.order Câu #{i+1}: 
                .badge.bg-success
                    a.text-decoration-none.text-reset(href="/questions/"+q._id+"/view" target="_blank") Xem
                | &nbsp;
                .badge.bg-success
                    a.text-decoration-none.text-reset(href="/questions/"+q._id+"/edit" target="_blank") Sửa
                | &nbsp;
                .badge.bg-primary
                    a.text-decoration-none.text-reset(style="cursor: pointer;" onclick="removeQuestion('"+q._id+"', update)") -
                | &nbsp;
                if (q.level)
                    .badge.bg-danger
                        a.text-decoration-none.text-reset(href="#"+q.grade target="_blank")= q.level
                | &nbsp;
                if (q.grade)
                    .badge.bg-danger
                        a.text-decoration-none.text-reset(href="/questions?grade="+q.grade target="_blank") Lớp #{q.grade}
                    | &nbsp;
                each tag in q.main_tags
                    .badge.bg-danger
                        a.text-decoration-none.text-reset(href="/questions?tags="+"["+JSON.stringify(tag)+"]" target="_blank")= tag.value
                    | &nbsp;
                each tag in q.side_tags
                    .badge.bg-warning
                        a.text-decoration-none.text-reset(href="/questions?tags="+"["+JSON.stringify(tag)+"]" target="_blank")= tag.value
                    | &nbsp;
                if q.answer && q.answer.length > 5
                    .badge.bg-success
                        a.text-decoration-none.text-reset(href="#") Có đáp án chi tiết
                    | &nbsp;
                .test-wrap
                    .question-wrap
                        | !{q.question}
                    form.row.row-cols-1.row-cols-sm-2.row-cols-md-4.no-gutters.mb-0
                        each a,j in q.choices
                            .col.mb-1
                                .radio.radio-before
                                    label.radio__input
                                        input(type="radio" name="radio" data-value=(a.isTrue==true) ? 1 : 0 data-order=j)
                                        .radio__control(style=(a.isTrue==true) ? 'background: var(--bs-success);' : '')= String.fromCharCode(65+j)
                                    .radio__label.d-flex.align-items-center
                                        | !{a.content}
    button#submit.btn.btn-success Lưu
block script-footer
    script(src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.5.1/gsap.min.js")
    script(src="/js/sortable.js")
    script(src="/js/helper/notify.js")
    script(src="/js/helper/fetch.js")
    script(src="/js/questions/functions.js")
    script.
        sortable = new Sortable(document.getElementById("main-list"));
        function orderQuestions() {
            anotherMethod('/api/questions/memory/order', 'POST', { order: sortable.toArray() }, undefined, (res) => {notify('Lỗi', 'Xảy ra lỗi khi lưu thứ tự.')});
        }
        let update = (id) => {
            document.getElementById('item-'+id).remove();
            document.querySelectorAll('.order').forEach((e, i) => { e.innerText = `Câu ${i + 1}: ` });
        }
        document.getElementById("submit").addEventListener("click", function() {
            fetch('/api/tests/save', {
                method: 'POST',
                mode: 'cors',
                cache: 'no-cache',
                credentials: 'same-origin',
                headers: {
                    'Content-Type': 'application/json'
                },
                redirect: 'follow',
                referrerPolicy: 'no-referrer',
                body: JSON.stringify({ 
                    name: document.querySelector('input[name="name"]').value,
                    time: document.querySelector('input[name="time"]').value,
                    order: sortable.toArray()
                 })
            })
                .then(res => res.json())
                .then(res => {
                    if (res.status == 201) alert("Đã xảy ra lỗi khi lưu.");
                    else location.href = location.origin + '/tests/'+ res.idNewTest + '/view';
                });
        })
            
    